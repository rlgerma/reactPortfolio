var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import styled from 'styled-components';
var StyledIcon = React.forwardRef(function (props, ref) {
    var title = props.title, size = props.size, svgProps = __rest(props, ["title", "size"]);
    var iconProps = {
        viewBox: '0 0 16 16',
        height: props.height !== undefined ? props.height : props.size,
        width: props.width !== undefined ? props.width : props.size,
        // @ts-ignore - aria is not always defined on SVG in React TypeScript types
        'aria-hidden': props.title == null ? 'true' : undefined,
        focusable: 'false',
        role: props.title != null ? 'img' : undefined,
        "fill": "currentColor",
    };
    return (React.createElement("svg", __assign({}, iconProps, svgProps, { ref: ref }),
        props.title && React.createElement("title", { key: "EyeBlocked-title" }, props.title),
        React.createElement("path", { d: "M14.78.22a.75.75 0 0 0-1.061 0L10.56 3.379a8.815 8.815 0 0 0-2.561-.378c-3.489 0-6.514 2.032-8 5a9.176 9.176 0 0 0 2.703 3.236L.218 13.721a.75.75 0 0 0 1.06 1.061l13.5-13.5a.75.75 0 0 0 0-1.061zM6.5 5a1.5 1.5 0 0 1 1.421 1.019L6.019 7.921A1.5 1.5 0 0 1 6.5 5zM1.721 8a7.594 7.594 0 0 1 2.52-2.462A3.981 3.981 0 0 0 4 6.907c0 .858.27 1.652.73 2.303l-.952.952A7.625 7.625 0 0 1 1.721 8zM12 6.906c0-.424-.066-.833-.189-1.217l-5.028 5.028A4 4 0 0 0 12 6.906z", key: "k0" }),
        ",",
        React.createElement("path", { d: "M12.969 4.531l-1.084 1.084.059.037c.94.6 1.737 1.403 2.335 2.348a7.594 7.594 0 0 1-2.335 2.348 7.326 7.326 0 0 1-5.725.933l-1.201 1.201A8.808 8.808 0 0 0 8 13c3.489 0 6.514-2.032 8-5a9.142 9.142 0 0 0-3.031-3.469z", key: "k1" })));
});
export var EyeBlocked = styled(StyledIcon)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"], ["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"])));
EyeBlocked.displayName = 'EyeBlocked';
export var EyeBlockedDimensions = { height: 16, width: 16 };
var templateObject_1;
