var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import styled from 'styled-components';
var StyledIcon = React.forwardRef(function (props, ref) {
    var title = props.title, size = props.size, svgProps = __rest(props, ["title", "size"]);
    var iconProps = {
        viewBox: '0 0 16 16',
        height: props.height !== undefined ? props.height : props.size,
        width: props.width !== undefined ? props.width : props.size,
        // @ts-ignore - aria is not always defined on SVG in React TypeScript types
        'aria-hidden': props.title == null ? 'true' : undefined,
        focusable: 'false',
        role: props.title != null ? 'img' : undefined,
        "fill": "currentColor",
    };
    return (React.createElement("svg", __assign({}, iconProps, svgProps, { ref: ref }),
        props.title && React.createElement("title", { key: "Ligature-title" }, props.title),
        React.createElement("path", { d: "M12 13.622v-.002l-.005-6.821-1.992.097H6.067V6.56c0-1.274.091-2.546.269-3.042.123-.343.353-.652.683-.919.322-.261.643-.393.955-.393.262 0 .48.045.647.134.235.134.464.359.682.669.577.82.812 1.038.939 1.131.216.158.477.238.776.238.292 0 .546-.109.757-.324a1.09 1.09 0 0 0 .315-.792c0-.335-.139-.691-.414-1.057-.268-.358-.683-.652-1.232-.875a4.743 4.743 0 0 0-1.793-.329c-.949 0-1.813.228-2.568.678a4.405 4.405 0 0 0-1.725 1.863c-.359.728-.333 2.105-.355 3.355H2.038v1.116H4v5.073c0 1.12-.342 1.422-.472 1.583a1.225 1.225 0 0 1-.944.455H1.98v.878h6.021v-.878h-.105c-1.424 0-1.828-.154-1.828-1.888v-.001l-.001-5.222h2.191c1.163 0 1.43.054 1.491.077.074.028.169.075.204.143.014.026.081.391.081 1.296v3.917c0 .913-.111 1.217-.179 1.319-.145.222-.319.345-.854.358v.879h4.588v-.873c-1.431 0-1.588-.153-1.588-1.505z", key: "k0" })));
});
export var Ligature = styled(StyledIcon)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"], ["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"])));
Ligature.displayName = 'Ligature';
export var LigatureDimensions = { height: 16, width: 16 };
var templateObject_1;
