var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import styled from 'styled-components';
var StyledIcon = React.forwardRef(function (props, ref) {
    var title = props.title, size = props.size, svgProps = __rest(props, ["title", "size"]);
    var iconProps = {
        viewBox: '0 0 16 16',
        height: props.height !== undefined ? props.height : props.size,
        width: props.width !== undefined ? props.width : props.size,
        // @ts-ignore - aria is not always defined on SVG in React TypeScript types
        'aria-hidden': props.title == null ? 'true' : undefined,
        focusable: 'false',
        role: props.title != null ? 'img' : undefined,
        "fill": "currentColor",
    };
    return (React.createElement("svg", __assign({}, iconProps, svgProps, { ref: ref }),
        props.title && React.createElement("title", { key: "MakeGroup-title" }, props.title),
        React.createElement("path", { d: "M5 2H3c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zM11 6h2c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1h-2c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1zm0-3h2v2h-2V3zM5 10H3c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1zm0 3H3v-2h2v2zM13 10h-2c-.55 0-1 .45-1 1v2c0 .55.45 1 1 1h2c.55 0 1-.45 1-1v-2c0-.55-.45-1-1-1z", key: "k0" }),
        ",",
        React.createElement("path", { d: "M14 8h-1c-1.336 0-2.591-.52-3.536-1.464S8 4.336 8 3V2c0-1.1-.9-2-2-2H2C.9 0 0 .9 0 2v4c0 1.1.9 2 2 2h1c1.336 0 2.591.52 3.536 1.464S8 11.664 8 13v1c0 1.1.9 2 2 2h4c1.1 0 2-.9 2-2v-4c0-1.1-.9-2-2-2zm1 6c0 .265-.105.515-.295.705S14.265 15 14 15h-4c-.265 0-.515-.105-.705-.295S9 14.265 9 14v-1a6 6 0 0 0-6-6H2c-.265 0-.515-.105-.705-.295S1 6.264 1 6V2c0-.265.105-.515.295-.705S1.735 1 2 1h4c.265 0 .515.105.705.295S7 1.735 7 2v1a6 6 0 0 0 6 6h1c.265 0 .515.105.705.295S15 9.735 15 10v4z", key: "k1" })));
});
export var MakeGroup = styled(StyledIcon)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"], ["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"])));
MakeGroup.displayName = 'MakeGroup';
export var MakeGroupDimensions = { height: 16, width: 16 };
var templateObject_1;
