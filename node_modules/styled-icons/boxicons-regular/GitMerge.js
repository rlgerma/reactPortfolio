var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import styled from 'styled-components';
var StyledIcon = React.forwardRef(function (props, ref) {
    var title = props.title, size = props.size, svgProps = __rest(props, ["title", "size"]);
    var iconProps = {
        viewBox: '0 0 24 24',
        height: props.height !== undefined ? props.height : props.size,
        width: props.width !== undefined ? props.width : props.size,
        // @ts-ignore - aria is not always defined on SVG in React TypeScript types
        'aria-hidden': props.title == null ? 'true' : undefined,
        focusable: 'false',
        role: props.title != null ? 'img' : undefined,
        "fill": "currentColor",
    };
    return (React.createElement("svg", __assign({}, iconProps, svgProps, { ref: ref }),
        props.title && React.createElement("title", { key: "GitMerge-title" }, props.title),
        React.createElement("circle", { cx: 6.5, cy: 5.5, r: 1.5, fill: "none", key: "k0" }),
        ",",
        React.createElement("circle", { cx: 17.5, cy: 12, r: 1.5, fill: "none", key: "k1" }),
        ",",
        React.createElement("circle", { cx: 6.5, cy: 18.5, r: 1.5, fill: "none", key: "k2" }),
        ",",
        React.createElement("path", { d: "M3 18.5C3 20.43 4.57 22 6.5 22s3.5-1.57 3.5-3.5c0-1.58-1.06-2.903-2.5-3.337v-3.002c.104.087.201.179.313.258 1.18.844 2.617 1.098 3.918 1.098.966 0 1.853-.14 2.506-.281a3.5 3.5 0 0 0 3.264 2.265c1.93 0 3.5-1.57 3.5-3.5s-1.57-3.5-3.5-3.5a3.5 3.5 0 0 0-3.404 2.718c-1.297.321-3.664.616-5.119-.426-.617-.441-1.02-1.137-1.25-2.025A3.501 3.501 0 0 0 10 5.5C10 3.57 8.43 2 6.5 2S3 3.57 3 5.5c0 1.58 1.06 2.903 2.5 3.337v6.326C4.06 15.597 3 16.92 3 18.5zm14.5-8c.827 0 1.5.673 1.5 1.5s-.673 1.5-1.5 1.5S16 12.827 16 12s.673-1.5 1.5-1.5zm-9.5 8c0 .827-.673 1.5-1.5 1.5S5 19.327 5 18.5 5.673 17 6.5 17s1.5.673 1.5 1.5zm-3-13C5 4.673 5.673 4 6.5 4S8 4.673 8 5.5 7.327 7 6.5 7 5 6.327 5 5.5z", key: "k3" })));
});
export var GitMerge = styled(StyledIcon)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"], ["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"])));
GitMerge.displayName = 'GitMerge';
export var GitMergeDimensions = { height: 24, width: 24 };
var templateObject_1;
