var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import styled from 'styled-components';
var StyledIcon = React.forwardRef(function (props, ref) {
    var title = props.title, size = props.size, svgProps = __rest(props, ["title", "size"]);
    var iconProps = {
        viewBox: '0 0 24 24',
        height: props.height !== undefined ? props.height : props.size,
        width: props.width !== undefined ? props.width : props.size,
        // @ts-ignore - aria is not always defined on SVG in React TypeScript types
        'aria-hidden': props.title == null ? 'true' : undefined,
        focusable: 'false',
        role: props.title != null ? 'img' : undefined,
        "fill": "currentColor",
    };
    return (React.createElement("svg", __assign({}, iconProps, svgProps, { ref: ref }),
        props.title && React.createElement("title", { key: "Toggle-title" }, props.title),
        React.createElement("path", { fill: "none", d: "M17.5 4h-11C5.169 4 4.074 5.015 3.977 6.297A.922.922 0 0 1 4 6.5C4 7.879 5.121 9 6.5 9h11C18.879 9 20 7.879 20 6.5 20 5.091 18.902 4 17.5 4zm0 4c-.813 0-1.5-.687-1.5-1.5S16.687 5 17.5 5s1.5.687 1.5 1.5S18.313 8 17.5 8zm0 7h-11c-1.331 0-2.426 1.015-2.523 2.297A.922.922 0 0 1 4 17.5C4 18.879 5.121 20 6.5 20h11c1.379 0 2.5-1.121 2.5-2.5 0-1.409-1.098-2.5-2.5-2.5zm-11 4c-.813 0-1.5-.687-1.5-1.5S5.687 16 6.5 16s1.5.687 1.5 1.5S7.313 19 6.5 19z", key: "k0" }),
        ",",
        React.createElement("path", { d: "M17.5 5c-.813 0-1.5.687-1.5 1.5S16.687 8 17.5 8 19 7.313 19 6.5 18.313 5 17.5 5z", key: "k1" }),
        ",",
        React.createElement("path", { d: "M17.5 2h-11C4.002 2 1.97 4.012 1.97 6.484c0 .087.013.172.036.255A4.507 4.507 0 0 0 6.5 11h11c2.481 0 4.5-2.019 4.5-4.516C22 4.012 19.981 2 17.5 2zm0 7h-11A2.502 2.502 0 0 1 4 6.5a.922.922 0 0 0-.023-.203C4.074 5.015 5.169 4 6.5 4h11C18.902 4 20 5.091 20 6.5 20 7.879 18.879 9 17.5 9zm-11 7c-.813 0-1.5.687-1.5 1.5S5.687 19 6.5 19 8 18.313 8 17.5 7.313 16 6.5 16z", key: "k2" }),
        ",",
        React.createElement("path", { d: "M17.5 13h-11c-2.498 0-4.53 2.012-4.53 4.484 0 .087.013.172.036.255A4.507 4.507 0 0 0 6.5 22h11c2.481 0 4.5-2.019 4.5-4.516C22 15.012 19.981 13 17.5 13zm0 7h-11A2.502 2.502 0 0 1 4 17.5a.922.922 0 0 0-.023-.203C4.074 16.015 5.169 15 6.5 15h11c1.402 0 2.5 1.091 2.5 2.5 0 1.379-1.121 2.5-2.5 2.5z", key: "k3" })));
});
export var Toggle = styled(StyledIcon)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"], ["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"])));
Toggle.displayName = 'Toggle';
export var ToggleDimensions = { height: 24, width: 24 };
var templateObject_1;
