var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
import * as React from 'react';
import styled from 'styled-components';
var StyledIcon = React.forwardRef(function (props, ref) {
    var title = props.title, size = props.size, svgProps = __rest(props, ["title", "size"]);
    var iconProps = {
        viewBox: '0 0 24 24',
        height: props.height !== undefined ? props.height : props.size,
        width: props.width !== undefined ? props.width : props.size,
        // @ts-ignore - aria is not always defined on SVG in React TypeScript types
        'aria-hidden': props.title == null ? 'true' : undefined,
        focusable: 'false',
        role: props.title != null ? 'img' : undefined,
        "fill": "currentColor",
    };
    return (React.createElement("svg", __assign({}, iconProps, svgProps, { ref: ref }),
        props.title && React.createElement("title", { key: "TennisBall-title" }, props.title),
        React.createElement("path", { fill: "none", d: "M17 12c0 1.561.667 3.068 1.8 4.193a7.934 7.934 0 0 0-.085-8.526C17.635 8.778 17 10.355 17 12z", key: "k0" }),
        ",",
        React.createElement("path", { fill: "none", d: "M15 12c0-2.23.902-4.373 2.426-5.862C15.998 4.815 14.095 4 12 4s-3.998.815-5.426 2.138C8.098 7.627 9 9.77 9 12c0 2.164-.953 4.24-2.549 5.75C7.892 19.14 9.846 20 12 20s4.108-.86 5.549-2.25C15.953 16.24 15 14.164 15 12z", key: "k1" }),
        ",",
        React.createElement("path", { fill: "none", d: "M7 12c0-1.645-.635-3.222-1.715-4.333a7.934 7.934 0 0 0-.085 8.526C6.333 15.068 7 13.561 7 12z", key: "k2" }),
        ",",
        React.createElement("path", { d: "M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zM5.285 7.667C6.365 8.778 7 10.355 7 12c0 1.561-.667 3.068-1.8 4.193a7.934 7.934 0 0 1 .085-8.526zM6.451 17.75C8.047 16.24 9 14.164 9 12c0-2.23-.902-4.373-2.426-5.862C8.002 4.815 9.905 4 12 4s3.998.815 5.426 2.138C15.902 7.627 15 9.77 15 12c0 2.164.953 4.24 2.549 5.75C16.108 19.14 14.154 20 12 20s-4.108-.86-5.549-2.25zM18.8 16.193C17.667 15.068 17 13.561 17 12c0-1.645.635-3.222 1.715-4.333a7.934 7.934 0 0 1 .085 8.526z", key: "k3" })));
});
export var TennisBall = styled(StyledIcon)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"], ["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"])));
TennisBall.displayName = 'TennisBall';
export var TennisBallDimensions = { height: 24, width: 24 };
var templateObject_1;
