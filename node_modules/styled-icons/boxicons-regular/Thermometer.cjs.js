"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var styled_components_1 = __importDefault(require("styled-components"));
var StyledIcon = React.forwardRef(function (props, ref) {
    var title = props.title, size = props.size, svgProps = __rest(props, ["title", "size"]);
    var iconProps = {
        viewBox: '0 0 24 24',
        height: props.height !== undefined ? props.height : props.size,
        width: props.width !== undefined ? props.width : props.size,
        // @ts-ignore - aria is not always defined on SVG in React TypeScript types
        'aria-hidden': props.title == null ? 'true' : undefined,
        focusable: 'false',
        role: props.title != null ? 'img' : undefined,
        "fill": "currentColor",
    };
    return (React.createElement("svg", __assign({}, iconProps, svgProps, { ref: ref }),
        props.title && React.createElement("title", { key: "Thermometer-title" }, props.title),
        React.createElement("path", { fill: "none", d: "M10.511 14.372A1 1 0 0 1 10 13.5V11H8v2.5a1 1 0 0 1-.511.872C6.557 14.896 6 15.878 6 17c0 1.654 1.346 3 3 3s3-1.346 3-3c0-1.122-.557-2.104-1.489-2.628zM8 4h2v5H8z", key: "k0" }),
        ",",
        React.createElement("path", { d: "M11 2H7a1 1 0 0 0-1 1v9.957c-1.263.928-2 2.398-2 4.043 0 2.757 2.243 5 5 5s5-2.243 5-5c0-1.645-.737-3.115-2-4.043V3a1 1 0 0 0-1-1zm-1 2v5H8V4h2zM9 20c-1.654 0-3-1.346-3-3 0-1.122.557-2.104 1.489-2.628A1 1 0 0 0 8 13.5V11h2v2.5a1 1 0 0 0 .511.872C11.443 14.896 12 15.878 12 17c0 1.654-1.346 3-3 3zm5-17h6v2h-6zm0 4h5v2h-5zm0 4h4v2h-4z", key: "k1" })));
});
exports.Thermometer = styled_components_1.default(StyledIcon)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"], ["\n  display: inline-block;\n  vertical-align: middle;\n  overflow: hidden;\n"])));
exports.Thermometer.displayName = 'Thermometer';
exports.ThermometerDimensions = { height: 24, width: 24 };
var templateObject_1;
