{"version":3,"sources":["webpack:///./src/components/Portfolio.js","webpack:///./src/components/Technologies.js","webpack:///./src/components/ContactForm.js","webpack:///./src/pages/index.js"],"names":["Item","styled","div","Company","h3","media","xs","Duration","Position","Portfolio","Wrapper","Technologies","props","edges","map","item","node","key","id","fixed","Form","form","Email","input","Message","textarea","Submit","ModalButton","button","Modal","visible","ModalOverlay","ContactForm","handleSuccess","setState","email","message","showModal","submitting","closeModal","handleSubmit","bind","state","status","ev","this","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","then","catch","error","alert","preventDefault","send","render","onSubmit","submitForm","name","type","title","placeholder","onChange","handleInputChange","required","disabled","value","onClick","React","Component","Section","dark","css","SectionTitle","h2","pageQuery","IndexPage","Layout","Hero","fluid","hero","HeroText","Social","allSocialJson","alignItems","flexDirection","px","width","allLogos"],"mappings":"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","file":"component---src-pages-index-js-b8080c62dbdb2af3d88a.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport media from '../utils/style';\r\n\r\nconst Item = styled.div`\r\n  width: 60%;\r\n  margin: 0 auto;\r\n  margin-bottom: 1.5em;\r\n`;\r\n\r\nconst Company = styled.h3`\r\n  display: block;\r\n  letter-spacing: 2px;\r\n  font-weight: 700;\r\n  float: left;\r\n  ${media.xs`\r\n    float:none;\r\n  `}\r\n`;\r\n\r\nconst Duration = styled.div`\r\n  display: block;\r\n  float: right;\r\n  clear: both;\r\n  ${media.xs`\r\n    float:none;\r\n  `}\r\n`;\r\n\r\nconst Position = styled.div`\r\n  display: block;\r\n  clear: both;\r\n  text-align: left;\r\n  ${media.xs`\r\n    text-align: center;\r\n  `}\r\n`;\r\n\r\nfunction Portfolio() {\r\n  return (\r\n    <>\r\n      <Item>\r\n        <Duration></Duration>\r\n        <Company></Company>\r\n        <Position></Position>\r\n      </Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from 'react';\nimport styled from 'styled-components';\nimport Img from 'gatsby-image';\n\nimport media from '../utils/style';\n\nconst Wrapper = styled.div`\n  width: 60%;\n  margin: 0 auto;\n  ${media.xs`\n      width:100%;\n    `}\n`;\n\nconst Item = styled.div`\n  padding: 1.5em;\n  ${media.xs`\n    padding:1em;\n  `}\n  display:inline-block;\n`;\n\nfunction Technologies(props) {\n  const { edges } = props;\n  return (\n    <Wrapper>\n      {edges.map(({ node: item }) => (\n        <Item key={item.id}>\n          <Img fixed={item.fixed} />\n        </Item>\n      ))}\n    </Wrapper>\n  );\n}\n\nexport default Technologies;\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Form = styled.form``\n\nconst Email = styled.input`\n  border: 0;\n  padding: 10px;\n  color: #333;\n  border: solid 1px #ccc;\n  margin: 0 0 20px;\n  border-radius: 6px;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst Message = styled.textarea`\n  border: 0;\n  padding: 10px;\n  color: #333;\n  border: solid 1px #ccc;\n  margin: 0 0 20px;\n  border-radius: 6px;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst Submit = styled.input`\n  border: solid 1px #ccc;\n  padding: 15px 30px;\n  margin: 0 0 20px;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #333;\n  cursor: pointer;\n  border-radius: 0;\n  background-color: #fff;\n`\n\nconst ModalButton = styled.button`\n  border: solid 1px #ccc;\n  padding: 15px 30px;\n  margin: 0 0 20px;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: #333;\n  cursor: pointer;\n  border-radius: 0;\n  background-color: #fff;\n`\n\nconst Modal = styled.div`\n  background: ghostwhite;\n  padding: 2em;\n  border-radius: 2px;\n  position: fixed;\n  min-width: 75%;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  margin: 0 auto;\n  z-index: 2000;\n  display: flex;\n  flex-flow: column;\n  align-items: flex-start;\n  transition: 0.2s all;\n  opacity: ${props => (props.visible ? '1' : '0')};\n  visibility: ${props => (props.visible ? 'visible' : 'hidden')};\n  p {\n    line-height: 1.6;\n    margin: 0 0 2em 0;\n  }\n`\n\nconst ModalOverlay = styled.div`\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: fixed;\n  z-index: 1000;\n  background-color: rgba(0, 0, 0, 0.3);\n  opacity: ${props => (props.visible ? '1' : '0')};\n  visibility: ${props => (props.visible ? 'visible' : 'hidden')};\n`\nclass ContactForm extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.state = {\n      status: '',\n      showModal: false,\n      submitting: false,\n    }\n  }\n  handleSubmit(ev) {\n    this.setState({\n      submitting: true,\n    })\n    const form = ev.target\n    const data = new FormData(form)\n    const xhr = new XMLHttpRequest()\n    xhr.open(form.method, form.action)\n    xhr\n      .setRequestHeader('Accept', 'application/json')\n      .then(this.handleSuccess)\n      .catch(error => alert(error))\n\n    ev.preventDefault()\n    xhr.send(data)\n  }\n\n  handleSuccess = () => {\n    this.setState({\n      email: '',\n      message: '',\n      showModal: true,\n      submitting: false,\n    })\n  }\n\n  closeModal = () => {\n    this.setState({ showModal: false })\n  }\n  render() {\n    const { showModal, submitting } = this.props\n    return (\n      <Form\n        onSubmit={this.submitForm}\n        action=\"https://formspree.io/moqeyjjy\"\n        method=\"POST\"\n      >\n        <Email\n          name=\"email\"\n          type=\"email\"\n          title=\"Email\"\n          placeholder=\"Email\"\n          onChange={this.handleInputChange}\n          required\n          disabled={submitting}\n        />\n        <Message\n          name=\"message\"\n          title=\"Message\"\n          type=\"text\"\n          placeholder=\"Message\"\n          onChange={this.handleInputChange}\n          required\n          disabled={submitting}\n        />\n        <Submit\n          name=\"submit\"\n          type=\"submit\"\n          value={submitting ? 'Sending...' : 'Send'}\n          disabled={submitting}\n        />\n        <ModalOverlay onClick={this.closeModal} visible={showModal} />\n        <Modal visible={showModal}>\n          <p>\n            Thank you for reaching out. I will get back to you as soon as\n            possible.\n          </p>\n          <ModalButton onClick={this.closeModal}>Okay</ModalButton>\n        </Modal>\n      </Form>\n    )\n  }\n}\nexport default ContactForm\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport styled, { css } from 'styled-components'\r\nimport { Flex, Box } from 'rebass'\r\nimport Portfolio from '../components/Portfolio'\r\nimport Technologies from '../components/Technologies'\r\nimport ContactForm from '../components/ContactForm'\r\nimport Hero from '../components/Hero'\r\nimport Layout from '../components/Layout'\r\nimport HeroText from '../components/HeroText'\r\nimport Social from '../components/Social'\r\nimport media from '../utils/style'\r\nconst Section = styled.div`\r\n  text-align: center;\r\n  padding-top: 45px;\r\n  padding-bottom: 40px;\r\n  ${props =>\r\n    props.dark &&\r\n    css`\r\n      background: #292929;\r\n      h2 {\r\n        color: #fff;\r\n      }\r\n      h3 {\r\n        color: #fff;\r\n      }\r\n      div {\r\n        color: #979797;\r\n      }\r\n    `}\r\n`\r\n\r\nconst SectionTitle = styled.h2`\r\n  font-size: 2em;\r\n  margin: 0.67em 0;\r\n  ${media.xs`\r\n    font-size:1.5em;\r\n  `}\r\n`\r\n\r\nconst IndexPage = ({ data }) => (\r\n  <Layout>\r\n    <Hero fluid={data.hero.edges[0].node.fluid}>\r\n      <HeroText />\r\n      <Social edges={data.allSocialJson.edges} />\r\n    </Hero>\r\n    <Section id=\"about-me\">\r\n      <h1>About Me</h1>\r\n      <Flex alignItems=\"center\" flexDirection=\"column\">\r\n        <Box px={2} width={[1, 1 / 2]}>\r\n          <p>\r\n            My name is Richard Germaine. I'm a Web Developer from Denver, CO.\r\n          </p>\r\n        </Box>\r\n      </Flex>\r\n    </Section>\r\n    <Section id=\"portfolio\" dark>\r\n      <SectionTitle>My Work</SectionTitle>\r\n      <Portfolio />\r\n    </Section>\r\n    <Section id=\"technologies\">\r\n      <SectionTitle>Tech I Use</SectionTitle>\r\n      <Technologies edges={data.allLogos.edges} />\r\n    </Section>\r\n    <Section id=\"contact\" dark>\r\n      <SectionTitle>Contact Me</SectionTitle>\r\n      <Flex alignItems=\"center\" flexDirection=\"column\">\r\n        <Box px={2} width={[1, 1 / 2]}>\r\n          <ContactForm />\r\n        </Box>\r\n      </Flex>\r\n    </Section>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n\r\nexport const pageQuery = graphql`\r\n  query indexQuery {\r\n    allSocialJson {\r\n      edges {\r\n        node {\r\n          url\r\n          type\r\n        }\r\n      }\r\n    }\r\n\r\n    allLogos: allImageSharp(\r\n      filter: { original: { src: { regex: \"/logos/\" } } }\r\n      sort: { fields: original___src }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fixed(height: 80, grayscale: true) {\r\n            ...GatsbyImageSharpFixed_withWebp_tracedSVG\r\n          }\r\n        }\r\n      }\r\n    }\r\n    hero: allImageSharp(\r\n      filter: { original: { src: { regex: \"/background/\" } } }\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fluid(quality: 100) {\r\n            ...GatsbyImageSharpFluid_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}